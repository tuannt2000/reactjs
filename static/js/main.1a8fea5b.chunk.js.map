{"version":3,"sources":["Tinh.js","Thanhpho.js","Japan.js","App.js","reportWebVitals.js","index.js"],"names":["Tinh","props","state","reponse","this","check","setState","fetch","index","prefCode","headers","then","res","json","result","catch","error","console","log","className","onChange","SetCheck","onHandleChange","data","children","type","Component","Thanhpho","handleChange","danso","show","map","item","cityCode","cityName","onHandleChangeThanhPho","thanhpho","document","querySelectorAll","value","style","display","querySelector","innerHTML","Japan","handleChangeThanhPho","href","id","role","prefName","App","a","b","tinh","length","pop","timkiem","indexOf","shift","splice","push","label","borderColor","Math","floor","random","toString","fill","i","mang","j","labels","datasets","DanSo","options","responsive","plugins","title","text","font","size","legend","position","scales","yAxes","xAxes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"kMAoEeA,E,kDAjEX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,QAAU,CACN,QAAW,KACX,OAAU,CACN,aAAgB,KAChB,KAAQ,CAAC,CACL,MAAS,qBACT,KAAQ,CAAC,CACL,KAAQ,KACR,MAAS,OACV,CACC,KAAQ,KACR,MAAS,OACV,CACC,KAAQ,KACR,MAAS,OACV,CACC,KAAQ,KACR,MAAS,YAKzB,OAAU,GAzBA,E,4CA6BlB,YAC4B,IAArBC,KAAKF,MAAMG,MACVD,KAAKE,SAAS,CAACD,OAAQ,IAEvBD,KAAKE,SAAS,CAACD,OAAQ,M,+BAI/B,WAAsB,IAAD,OACjBE,MAAM,sFAAsFH,KAAKH,MAAMO,MAAM,aAAaJ,KAAKH,MAAMQ,SAAS,CAC1IC,QAAS,CAAE,YAAa,8CAE3BC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACG,SAACG,GACD,EAAKR,SAAS,CACVH,QAAUW,OAIjBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,Q,oBAGhC,WAAU,IAAD,OACL,OACI,sBAAKG,UAAW,QAAUf,KAAKH,MAAMO,MAArC,UACI,uBAAOY,SAAU,WACb,EAAKC,WACL,EAAKpB,MAAMqB,eAAe,EAAKpB,MAAMC,QAAQW,OAAOS,KAAK,GAAGA,KAAK,EAAKtB,MAAMuB,SAAS,EAAKtB,MAAMG,QACjGoB,KAAK,aACR,gCAAQrB,KAAKH,MAAMuB,kB,GA5DhBE,aC+FJC,E,kDA7FX,WAAY1B,GAAO,IAAD,8BACd,cAAMA,IA0CV2B,aAAe,SAACL,EAAKM,EAAMxB,GACvB,EAAKJ,MAAMqB,eAAeC,EAAKM,EAAMxB,IA5CvB,EA+ClByB,KAAO,WACH,IAAwB,IAArB,EAAK5B,MAAMG,MACV,OAAO,gCACH,oJACA,sBAAKc,UAAU,UAAf,UACI,wBAAQM,KAAK,SAASN,UAAU,QAAQ,eAAa,QAArD,kBACC,EAAKjB,MAAMC,QAAQW,OAAOiB,KAAI,SAACC,EAAKxB,GACjC,OAAO,cAAC,EAAD,CAAMc,eAAgB,EAAKM,aAAcnB,SAAU,EAAKR,MAAMO,MAAmBA,MAAOwB,EAAKC,SAA7F,SAAwGD,EAAKE,UAAnC1B,aApDjG,EAAKN,MAAQ,CACTC,QAAU,CACN,QAAW,KACX,OAAU,CAAC,CACP,SAAY,EACZ,SAAY,QACZ,SAAY,qBACZ,YAAe,KAChB,CACC,SAAY,EACZ,SAAY,QACZ,SAAY,uCACZ,YAAe,OAGvB,OAAU,GAjBA,E,qDAqBlB,WAAqB,IAAD,OAChBI,MAAM,8DAA8DH,KAAKH,MAAMO,MAAM,CACjFE,QAAS,CAAE,YAAa,8CAE3BC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACG,SAACG,GACD,EAAKR,SAAS,CACVH,QAAUW,S,sBAMtB,YAC4B,IAArBV,KAAKF,MAAMG,MACVD,KAAKE,SAAS,CAACD,OAAQ,IAEvBD,KAAKE,SAAS,CAACD,OAAQ,M,oBAsB/B,WAAU,IAAD,OACL,OACI,sBAAKc,UAAW,YAAcf,KAAKH,MAAMO,MAAzC,UACI,uBAAOY,SAAU,WACb,EAAKC,WACL,EAAKpB,MAAMkC,uBAAuB,EAAKjC,MAAMG,OAC7C,IAAI+B,EAAWC,SAASC,iBAAiB,aACzC,IAAwB,IAArB,EAAKpC,MAAMG,MAAgB,CAAC,IAAD,gBACT+B,GADS,IAC1B,IAAI,EAAJ,qBAA0B,CAAC,IAAnBG,EAAkB,QACnBA,IAAUH,EAAS,EAAKnC,MAAMO,MAAM,GACnC+B,EAAMC,MAAMC,QAAU,QAEtBF,EAAMC,MAAMC,QAAU,QALJ,8BAQ1BJ,SAASK,cAAc,gBAAgBF,MAAMC,QAAU,QACvDJ,SAASK,cAAc,oBAAoBC,UAAY,kEAAkB,EAAK1C,MAAMuB,aACnF,CAAC,IAAD,gBACiBY,GADjB,IACD,IAAI,EAAJ,qBAA2B,SAChBI,MAAMC,QAAU,SAF1B,8BAIDJ,SAASK,cAAc,gBAAgBF,MAAMC,QAAU,OACvDJ,SAASK,cAAc,oBAAoBC,UAAY,uEAE5DlB,KAAK,aACR,gCAAQrB,KAAKH,MAAMuB,WAClBpB,KAAK0B,c,GAxFCJ,aCgDRkB,E,kDA/CX,WAAY3C,GAAO,IAAD,8BACd,cAAMA,IAuBV2B,aAAe,SAACL,EAAKM,EAAMxB,GACvB,EAAKJ,MAAMqB,eAAeC,EAAKM,EAAMxB,IAzBvB,EA4BlBwC,qBAAuB,SAACxC,GACpB,EAAKJ,MAAMkC,uBAAuB9B,IA3BlC,EAAKH,MAAQ,CACTC,QAAU,CACN,QAAW,KACX,OAAU,CAAC,CACP,SAAY,EACZ,SAAY,yBAPV,E,qDAclB,WAAqB,IAAD,OAChBI,MAAM,yDAAyD,CAC3DG,QAAS,CAAE,YAAa,8CAE3BC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACG,SAAAG,GAAW,EAAKR,SAAS,CAACH,QAAUW,S,oBAY5C,WAAU,IAAD,OACL,OACI,sBAAKK,UAAU,WAAf,UACI,oBAAIA,UAAU,gBAAd,SAA8B,mBAAG2B,KAAK,IAAI,cAAY,QAAQ,cAAY,WAA5C,kFAC9B,sBAAK3B,UAAU,yBAAyB4B,GAAG,UAAUC,KAAK,SAA1D,UACI,wBAAQvB,KAAK,SAASN,UAAU,QAAQ,eAAa,QAArD,kBACCf,KAAKF,MAAMC,QAAQW,OAAOiB,KAAI,SAACC,EAAKxB,GACjC,OAAO,cAAC,EAAD,CAAUc,eAAgB,EAAKM,aAAcO,uBAAwB,EAAKU,qBAAsBrC,MAAOwB,EAAKvB,SAA5G,SAAmIuB,EAAKiB,UAAbzC,gB,GAxCtIkB,a,QCqILwB,E,kDAnIX,WAAYjD,GAAQ,IAAD,8BACf,cAAMA,IAaV2B,aAAe,SAACL,EAAKM,EAAMxB,GACvB,IAAI8C,EAAI,EAAKjD,MAAMqB,KACf6B,EAAI,EAAKlD,MAAMmD,KACnB,GAAGhD,GACC,GAA8B,IAA3B,EAAKH,MAAMqB,KAAK+B,OACfH,EAAEI,MACF,EAAKjD,SAAS,CAACiB,KAAO4B,IACtBC,EAAEG,MACF,EAAKjD,SAAS,CAAC+C,KAAOD,SACpB,GAAG,EAAKlD,MAAMqB,KAAK+B,OAAS,EAAE,CAChC,IAAIE,EAAUJ,EAAEK,QAAQ5B,GACT,IAAZ2B,GACCL,EAAEO,QACF,EAAKpD,SAAS,CAACiB,KAAO4B,IACtBC,EAAEM,QACF,EAAKpD,SAAS,CAAC+C,KAAOD,MAEtBD,EAAEQ,OAAOH,EAAQA,GACjB,EAAKlD,SAAS,CAACiB,KAAO4B,IACtBC,EAAEO,OAAOH,EAAQA,GACjB,EAAKlD,SAAS,CAAC+C,KAAOD,WAI9BD,EAAES,KAAKrC,GACP,EAAKjB,SAAS,CAACiB,KAAO4B,IACtBC,EAAEQ,KAAK/B,GACP,EAAKvB,SAAS,CAAC+C,KAAOD,KAzCX,EA6CnBP,qBAAuB,SAACxC,GACpB,IAAI8C,EAAI,EAAKjD,MAAMqB,KACf6B,EAAI,EAAKlD,MAAMmD,KAChBhD,IACC8C,EAAEQ,OAAO,EAAE,EAAKzD,MAAMqB,KAAK+B,QAC3B,EAAKhD,SAAS,CAACiB,KAAO4B,IACtBC,EAAEO,OAAO,EAAE,EAAKzD,MAAMmD,KAAKC,QAC3B,EAAKhD,SAAS,CAAC+C,KAAOD,MAlD1B,EAAKlD,MAAQ,CACTqB,KAAM,GACN8B,KAAO,GACPvC,OAAS,CACLS,KAAO,CAAC,IAAK,IAAK,IAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MACzEsC,MAAQ,OACRC,YAAa,IAAIC,KAAKC,MAAoB,SAAdD,KAAKE,UAAmBC,SAAS,IAC7DC,MAAM,IATC,E,yCAyDnB,WACI,IAAIC,EAAI,EACJC,EAAO,GACX,GAA8B,IAA3BjE,KAAKF,MAAMqB,KAAK+B,OACfe,EAAKT,KAAKxD,KAAKF,MAAMY,aAErB,KAAMsD,EAAIhE,KAAKF,MAAMqB,KAAK+B,QAAO,CAC7B,IAD6B,EACzBH,EAAI,CACJ5B,KAAO,GACPsC,MAAQzD,KAAKF,MAAMmD,KAAKe,GACxBN,YAAa,IAAIC,KAAKC,MAAoB,SAAdD,KAAKE,UAAmBC,SAAS,IAC7DC,MAAM,GALmB,cAOhB/D,KAAKF,MAAMqB,KAAK6C,IAPA,IAO7B,IAAI,EAAJ,qBAAgC,CAAC,IAAzBE,EAAwB,QAC5BnB,EAAE5B,KAAKqC,KAAKU,EAAE/B,QARW,8BAU7B8B,EAAKT,KAAKT,KACRiB,EAGV,OAAOC,I,oBAGX,WACI,OACI,gCACI,cAAC,EAAD,CAAO/C,eAAgBlB,KAAKwB,aAAcO,uBAA0B/B,KAAKyC,uBACzE,cAAC,IAAD,CACItB,KAAM,CACNgD,OAAQ,CAAC,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAC1EC,SAAWpE,KAAKqE,SAEhBC,QAAS,CACLC,YAAY,EACZC,QAAS,CACLC,MAAO,CACHpC,SAAS,EACTqC,KAAM,uCACNC,KAAM,CACFC,KAAM,KAGdC,OAAQ,CACJxC,SAAS,EACTyC,SAAU,QAGlBC,OAAQ,CACJC,MAAO,CACHP,MAAO,CACHpC,SAAS,EACTqC,KAAM,qBACNC,KAAM,CACFC,KAAM,MAIlBK,MAAO,CACHR,MAAO,CACHpC,SAAS,EACTqC,KAAM,SACNC,KAAM,CACFC,KAAM,iB,GAxH5BtD,aCQH4D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB7E,MAAK,YAAkD,IAA/C8E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3D,SAAS4D,eAAe,SAM1BX,K","file":"static/js/main.1a8fea5b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Tinh extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            reponse : {\r\n                \"message\": null,\r\n                \"result\": {\r\n                    \"boundaryYear\": 2015,\r\n                    \"data\": [{\r\n                        \"label\": \"総人口\",\r\n                        \"data\": [{\r\n                            \"year\": 1980,\r\n                            \"value\": 12817\r\n                        }, {\r\n                            \"year\": 1985,\r\n                            \"value\": 12707\r\n                        }, {\r\n                            \"year\": 1990,\r\n                            \"value\": 12571\r\n                        }, {\r\n                            \"year\": 1995,\r\n                            \"value\": 12602\r\n                        }],\r\n                    }],\r\n                },\r\n            },\r\n            \"check\" : false\r\n        }\r\n    }\r\n\r\n    SetCheck(){\r\n        if(this.state.check === true){\r\n            this.setState({check : false})\r\n        }else{\r\n            this.setState({check : true})\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        fetch(\"https://opendata.resas-portal.go.jp/api/v1/population/composition/perYear?cityCode=\"+this.props.index+\"&prefCode=\"+this.props.prefCode,{\r\n            headers: { \"X-API-KEY\": \"OjcxJFvwkyY1rhDLOIlmIw1HzZltAoj0XBgsbd2C\" },\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n            this.setState({\r\n                reponse : result\r\n            });\r\n            },\r\n        )\r\n        .catch(error => console.log(error))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"tinh \" + this.props.index}>\r\n                <input onChange={() => {\r\n                    this.SetCheck();    \r\n                    this.props.onHandleChange(this.state.reponse.result.data[0].data,this.props.children,this.state.check);           \r\n                }} type=\"checkbox\"/> \r\n                <label>{this.props.children}</label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tinh;","import React, { Component } from 'react';\r\nimport Tinh from './Tinh';\r\n\r\nclass Thanhpho extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            reponse : {\r\n                \"message\": null,\r\n                \"result\": [{\r\n                    \"prefCode\": 1,\r\n                    \"cityCode\": \"01100\",\r\n                    \"cityName\": \"札幌市\",\r\n                    \"bigCityFlag\": \"2\"\r\n                }, {\r\n                    \"prefCode\": 1,\r\n                    \"cityCode\": \"01101\",\r\n                    \"cityName\": \"札幌市中央区\",\r\n                    \"bigCityFlag\": \"1\"\r\n                }],\r\n            },\r\n            \"check\" : false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://opendata.resas-portal.go.jp/api/v1/cities?prefCode=\"+this.props.index,{\r\n            headers: { \"X-API-KEY\": \"OjcxJFvwkyY1rhDLOIlmIw1HzZltAoj0XBgsbd2C\" },\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n            this.setState({\r\n                reponse : result\r\n            });\r\n            },\r\n        )\r\n    }\r\n\r\n    SetCheck(){\r\n        if(this.state.check === true){\r\n            this.setState({check : false})\r\n        }else{\r\n            this.setState({check : true})\r\n        }\r\n    }\r\n\r\n    handleChange = (data,danso,check) =>{\r\n        this.props.onHandleChange(data,danso,check)\r\n    }\r\n\r\n    show = () => {\r\n        if(this.state.check === true){\r\n            return <div>\r\n                <h2>人口を見たい地区、州を選択してください</h2>\r\n                <div className=\"alltinh\">\r\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                    {this.state.reponse.result.map((item,index)=>{\r\n                        return <Tinh onHandleChange={this.handleChange} prefCode={this.props.index} key={index} index={item.cityCode}>{item.cityName}</Tinh>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"thanhpho \" + this.props.index}>\r\n                <input onChange={() => {\r\n                    this.SetCheck(); \r\n                    this.props.onHandleChangeThanhPho(this.state.check);\r\n                    var thanhpho = document.querySelectorAll('.thanhpho');\r\n                    if(this.state.check === false){\r\n                        for(var value of thanhpho){\r\n                            if(value === thanhpho[this.props.index-1]){\r\n                                value.style.display = 'block';\r\n                            }else{\r\n                                value.style.display = 'none';\r\n                            }\r\n                        }\r\n                        document.querySelector('.allThanhPho').style.display = 'block';\r\n                        document.querySelector('.h1allthanhpho a').innerHTML = 'あなたが選択しました : ' + this.props.children\r\n                    }else{\r\n                        for(var value2 of thanhpho){\r\n                            value2.style.display = 'block';\r\n                        }\r\n                        document.querySelector('.allThanhPho').style.display = 'grid';\r\n                        document.querySelector('.h1allthanhpho a').innerHTML = '都市を選択してください'\r\n                    }\r\n                }} type=\"checkbox\"/> \r\n                <label>{this.props.children}</label>\r\n                {this.show()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Thanhpho;","import React, { Component } from 'react';\r\nimport Thanhpho from './Thanhpho';\r\n\r\nclass Japan extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            reponse : {\r\n                \"message\": null,\r\n                \"result\": [{\r\n                    \"prefCode\": 1,\r\n                    \"prefName\": \"北海道\"\r\n                }],\r\n            },\r\n        }\r\n    }\r\n\r\n    \r\n    componentDidMount() {\r\n        fetch(\"https://opendata.resas-portal.go.jp/api/v1/prefectures\",{\r\n            headers: { \"X-API-KEY\": \"OjcxJFvwkyY1rhDLOIlmIw1HzZltAoj0XBgsbd2C\"},\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            result => {this.setState({reponse : result})},\r\n        )\r\n    }\r\n\r\n    handleChange = (data,danso,check) => {\r\n        this.props.onHandleChange(data,danso,check);\r\n    }\r\n\r\n    handleChangeThanhPho = (check) => {\r\n        this.props.onHandleChangeThanhPho(check);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"checkbox\">\r\n                <h1 className='h1allthanhpho'><a href=\"/\" data-toggle=\"modal\" data-target=\"#myModal\">都市を選択してください</a></h1>\r\n                <div className=\"allThanhPho modal fade\" id=\"myModal\" role=\"dialog\">\r\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                    {this.state.reponse.result.map((item,index) => {\r\n                        return <Thanhpho onHandleChange={this.handleChange} onHandleChangeThanhPho={this.handleChangeThanhPho} index={item.prefCode} key={index}>{item.prefName}</Thanhpho>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Japan;","import React, { Component } from 'react';\nimport Japan from './Japan';\nimport { Line } from \"react-chartjs-2\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            tinh : [],\n            result : {\n                data : [1000,5000,3000,2000,5467,4567,6789,2341,6789,6713,2345,5890,8909,9731],\n                label : \"Demo\",\n                borderColor: '#'+Math.floor(Math.random()*16777215).toString(16),\n                fill: false\n            }\n        }\n    }\n\n    handleChange = (data,danso,check) => {\n        var a = this.state.data;\n        var b = this.state.tinh;\n        if(check){\n            if(this.state.data.length === 1){\n                a.pop();\n                this.setState({data : a})\n                b.pop();\n                this.setState({tinh : b})\n            }else if(this.state.data.length > 1){\n                var timkiem = b.indexOf(danso);\n                if(timkiem === 0){\n                    a.shift();\n                    this.setState({data : a})\n                    b.shift();\n                    this.setState({tinh : b})\n                }else{\n                    a.splice(timkiem,timkiem);\n                    this.setState({data : a})\n                    b.splice(timkiem,timkiem);\n                    this.setState({tinh : b})\n                }\n            }\n        }else{\n            a.push(data)\n            this.setState({data : a})\n            b.push(danso)\n            this.setState({tinh : b})\n        }\n    }\n\n    handleChangeThanhPho = (check) =>{\n        var a = this.state.data;\n        var b = this.state.tinh;\n        if(check){\n            a.splice(0,this.state.data.length);\n            this.setState({data : a})\n            b.splice(0,this.state.tinh.length);\n            this.setState({tinh : b})\n        }\n    }\n\n\n    DanSo(){\n        var i = 0;\n        var mang = [];\n        if(this.state.data.length === 0){\n            mang.push(this.state.result)\n        }else{\n            while(i < this.state.data.length){\n                var a = {\n                    data : [],\n                    label : this.state.tinh[i],\n                    borderColor: '#'+Math.floor(Math.random()*16777215).toString(16),\n                    fill: false\n                };\n                for(var j of this.state.data[i]){\n                    a.data.push(j.value)\n                }\n                mang.push(a);\n                ++i;\n            }\n        }\n        return mang;\n    }\n\n    render() {\n        return (\n            <div>\n                <Japan onHandleChange={this.handleChange} onHandleChangeThanhPho = {this.handleChangeThanhPho}/>\n                <Line\n                    data={{\n                    labels: [1980,1985,1990,1995,2000,2005,2010,2015,2020,2025,2030,2035,2040,2045],\n                    datasets:  this.DanSo()\n                    }}\n                    options={{\n                        responsive: true,\n                        plugins: {\n                            title: {\n                                display: true,\n                                text: \"人口チャート\",\n                                font: {\n                                    size: 30\n                                }        \n                            },\n                            legend: {\n                                display: true,\n                                position: \"top\"\n                            },\n                        },\n                        scales: {\n                            yAxes: {\n                                title: {\n                                    display: true,\n                                    text: '総人口',\n                                    font: {\n                                        size: 15\n                                    }\n                                },\n                            },\n                            xAxes: {\n                                title: {\n                                    display: true,\n                                    text: '年',\n                                    font: {\n                                        size: 15\n                                    }\n                                },\n                            },\n                          }\n                    }}                     \n                />\n            </div>\n        );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}